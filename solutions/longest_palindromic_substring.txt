// C++ Program to find Longest Palindromic Substring
#include <bits/stdc++.h>
using namespace std;
string longestPalindrome(string s) {
    int n = s.length();
    if (n == 0) return "";
    vector<vector<bool>> dp(n, vector<bool>(n));
    int start = 0, maxLen = 1;
    for (int i = 0; i < n; ++i) dp[i][i] = true;
    for (int l = 2; l <= n; ++l) {
        for (int i = 0; i <= n - l; ++i) {
            int j = i + l - 1;
            if (s[i] == s[j] && (l == 2 || dp[i+1][j-1])) {
                dp[i][j] = true;
                if (l > maxLen) {
                    maxLen = l;
                    start = i;
                }
            }
        }
    }
    return s.substr(start, maxLen);
}
int main() {
    cout << longestPalindrome("babad");
    return 0;
}
